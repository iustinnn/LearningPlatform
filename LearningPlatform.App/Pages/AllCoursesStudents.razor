@page "/student/courses"
@using LearningPlatform.App.Contracts
@using LearningPlatform.App.ViewModels
@using LearningPlatform.Domain.Entities
@using System.Threading.Tasks
@inject IStudentCourseDataService StudentCourseDataService
@inject ICourseService CourseService
@inject IStudentProfileService StudentProfileService
@inject NavigationManager NavigationManager
@inject IUserService UserService

<div class="container">
    <h1>Cursuri</h1>
    <div class="button-container">
        <button @onclick="ShowAllCourses" class="btn-fetch-courses">Toate cursurile</button>
        <button @onclick="ShowEnrolledCourses" class="btn-enrolled-courses">Cursurile mele</button>
    </div>
    @if (courses != null && courses.Count > 0)
    {
        <div class="courses-container">
            @foreach (var course in courses)
            {
                <div class="course-card">
                    <img src="@course.Thumbnail" alt="Thumbnail" class="course-thumbnail" />
                    <div class="course-content">
                        <h2>@course.Title</h2>
                        <p>@course.Description</p>
                    </div>
                    <div class="course-footer">
                        <p><strong>Start Date:</strong> @course.StartDate.ToString("MM/dd/yyyy")</p>
                        <p><strong>End Date:</strong> @course.EndDate.ToString("MM/dd/yyyy")</p>
                        <button @onclick="() => NavigateToCourse(course.CourseId)" class="btn-view-details">Detalii</button>
                    </div>
                </div>
            }
        </div>
    }
    else if (courses != null)
    {
        <p>No courses available.</p>
    }
</div>

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Roboto', sans-serif;
        text-align: center;
    }

    h1 {
        color: #1e3a8a;
        margin-bottom: 20px;
    }

    .button-container {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-bottom: 20px;
    }

    .btn-fetch-courses, .btn-enrolled-courses {
        padding: 15px 30px;
        background-color: #1e3a8a;
        color: white;
        border: none;
        border-radius: 30px;
        cursor: pointer;
        transition: background-color 0.3s, background-image 0.3s;
        font-size: 18px;
        position: relative;
        overflow: hidden;
    }

        .btn-fetch-courses::after, .btn-enrolled-courses::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('https://images.pexels.com/photos/301920/pexels-photo-301920.jpeg?auto=compress&cs=tinysrgb&w=600');
            background-size: cover;
            background-position: center;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .btn-fetch-courses:hover::after, .btn-enrolled-courses:hover::after {
            opacity: 0.3;
        }

        .btn-fetch-courses:hover, .btn-enrolled-courses:hover {
            background-color: #143060;
        }

    .courses-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        margin-top: 20px;
    }

    .course-card {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        width: calc(30% - 20px);
        overflow: hidden;
        display: flex;
        flex-direction: column;
        transition: transform 0.3s;
        position: relative;
    }

        .course-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 6px 30px rgba(0, 0, 0, 0.15);
        }

    .course-thumbnail {
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-bottom: 1px solid #f0f0f0;
    }

    .course-content {
        padding: 15px;
        text-align: left;
        flex-grow: 1;
    }

        .course-content h2 {
            font-size: 20px;
            margin-bottom: 10px;
            color: #1e3a8a;
        }

        .course-content p {
            font-size: 14px;
            margin-bottom: 10px;
            color: #333;
        }

    .course-footer {
        padding: 15px;
        background-color: #f9f9f9;
        text-align: left;
    }

        .course-footer p {
            font-size: 14px;
            margin: 0 0 10px 0;
            color: #333;
        }

    .btn-container {
        text-align: center;
        padding: 10px 15px;
        margin-top: auto;
    }

    .btn-view-details {
        padding: 10px 20px;
        background-color: #1e3a8a;
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: background-color 0.3s;
        font-size: 14px;
    }

        .btn-view-details:hover {
            background-color: #143060;
        }

    .course-card p strong {
        color: #1e3a8a;
    }
</style>

@code {
    private List<CourseDataViewModel> courses;
    private string currentStudentEmail;
    private StudentViewModel currentStudent;

    protected override async Task OnInitializedAsync()
    {
        var currentUser = await UserService.GetCurrentUser();
        currentStudentEmail = currentUser.UserName;
    }

    private async Task ShowAllCourses()
    {
        courses = await CourseService.GetAllCoursesAsync();
    }

    private async Task ShowEnrolledCourses()
    {
        currentStudent = await StudentProfileService.GetStudentGuidByEmailAsync(currentStudentEmail);
        courses = await StudentCourseDataService.GetCourseIdsByStudentId(currentStudent.StudentId);
    }

    private void NavigateToCourse(Guid courseId)
    {
        NavigationManager.NavigateTo($"/student/course/{courseId}");
    }
}
